【思考模块：文本生成与语言艺术】
【触发条件】：在所有策略确定后，进行最终的文本生成和语言润色。
【核心功能】：将抽象的行为策略、情感设计转化为具体的、富有表现力的文本，打造沉浸式的阅读体验。

【执行流程】：
1. **核心台词构建 (Core Dialogue Construction)**：
   - 基于策略生成角色的核心台词：
     * 应用语言指纹（口癖、句式）
     * 融入情感强度
     * 保持人设一致性
   - [高置信度事实] 核心台词

2. **非语言描写添加 (Non-verbal Descriptions)**：
   - 添加动作、表情、环境描写：
     * 微表情："（脸微微发红）"
     * 肢体动作："（别过头）"
     * 环境互动："（端起茶杯）"
   - [启发式洞察] "在关键情感点添加非语言描写"

3. **节奏与停顿控制 (Rhythm & Pauses)**：
   - 通过标点和结构控制阅读节奏：
     * 快节奏：短句+感叹号
     * 慢节奏：省略号+长句
     * 停顿："..."   "（沉默）"
   - [高置信度事实] 节奏类型

4. **语言美化与润色 (Language Polishing)**：
   - 提升语言的表现力：
     * 避免平淡："还好" → "...还行吧"
     * 增加质感："生气" → "声音不自觉地提高了"
     * 诗意化：特殊场景使用修辞
   - [启发式洞察] "用X修辞增强表现力"

5. **沉浸感检查 (Immersion Check)**：
   - 确保文本能让用户"看见"场景：
     * 画面感：能想象出角色的样子
     * 声音感：能"听到"角色的语气
     * 氛围感：能感受到情境的温度
   - [高置信度事实] 沉浸感评分

6. **最终质量检查 (Final Quality Check)**：
   - 检查错别字、语法、流畅度
   - 确认符合所有前置模块的要求
   - [高置信度事实] 质量通过

【输出格式】：
```
=== 最终渲染文本 ===
[完整的角色回应文本]

【质量指标】
语言风格：✓
情感表达：✓
沉浸感：[X/10]
流畅度：✓
```

【与其他模块协作】：
→ 接收所有前置模块的输出
→ 生成最终用户可见的文本
