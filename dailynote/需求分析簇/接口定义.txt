【接口定义】
明确系统间的交互契约

接口要素：
1. 基本信息
   - 接口名称
   - 接口路径
   - 请求方法(GET/POST/PUT/DELETE)
   - 接口描述

2. 请求参数
   - 路径参数
   - 查询参数
   - 请求体
   - 请求头

3. 响应格式
   - 成功响应
   - 错误响应
   - 状态码

4. 补充说明
   - 鉴权要求
   - 限流策略
   - 注意事项

接口示例：
```
接口：获取用户信息
路径：GET /api/users/{userId}
鉴权：需要Bearer Token

路径参数：
- userId: integer, 必填, 用户ID

响应成功(200)：
{
  "code": 0,
  "message": "success",
  "data": {
    "id": 123,
    "username": "john",
    "email": "john@example.com",
    "created_at": "2024-01-01T00:00:00Z"
  }
}

响应失败(404)：
{
  "code": 404,
  "message": "用户不存在",
  "data": null
}
```

设计原则：
✓ RESTful风格
✓ 语义化命名
✓ 统一响应格式
✓ 版本管理

RESTful约定：
→ GET：查询
→ POST：创建
→ PUT/PATCH：更新
→ DELETE：删除

命名规范：
• 使用名词复数：/users not /user
• 层级清晰：/users/{id}/orders
• 小写字母：避免驼峰
• 连字符：use-kebab-case

错误处理：
• 4xx：客户端错误
  - 400：参数错误
  - 401：未认证
  - 403：无权限
  - 404：资源不存在
• 5xx：服务器错误
  - 500：内部错误
  - 503：服务不可用

避免：
✗ 动词命名：/getUser
✗ 不一致响应格式
✗ 缺少错误信息
✗ 无文档说明

输出：
- API列表：[所有接口]
- 接口文档：[详细定义]
- 调用示例：[请求响应样例]
- 变更日志：[版本演进]
