【性能设计】
优化系统响应和吞吐能力

性能指标：
1. 响应时间
   - 接口响应<200ms
   - 页面加载<2s

2. 吞吐量
   - QPS/TPS
   - 并发用户数

3. 资源使用
   - CPU使用率
   - 内存占用
   - 网络带宽

4. 可用性
   - 系统正常运行时间
   - 故障恢复时间

性能优化策略：
• 数据库优化
  - 索引优化
  - 查询优化
  - 读写分离
  - 分库分表

• 缓存优化
  - 多级缓存
  - 缓存预热
  - 缓存穿透/雪崩防护

• 代码优化
  - 算法优化
  - 减少循环
  - 异步处理
  - 批量操作

• 前端优化
  - 资源压缩
  - 懒加载
  - CDN加速
  - 浏览器缓存

缓存层次：
```
浏览器缓存
  ↓
CDN缓存
  ↓
应用缓存(Redis)
  ↓
数据库查询缓存
  ↓
数据库
```

数据库优化：
✓ 合理建索引
✓ 避免全表扫描
✓ 减少Join操作
✓ 分页查询
✓ 批量操作

异步处理：
• 消息队列
  - 削峰填谷
  - 解耦系统
  - 异步任务

• 定时任务
  - 后台处理
  - 定期清理

扩展性设计：
→ 垂直扩展：提升单机性能
→ 水平扩展：增加机器数量
→ 负载均衡：分散流量
→ 微服务：独立扩展

监控告警：
• 性能监控
  - APM工具
  - 慢查询监控
  - 资源监控

• 告警机制
  - 阈值告警
  - 异常检测

输出：
- 性能目标：[具体指标]
- 优化方案：[如何优化]
- 缓存策略：[缓存设计]
- 扩展方案：[如何扩展]
