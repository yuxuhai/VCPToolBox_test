【优缺点分析】
全面评估方案的利弊

核心思想：
客观分析优点和缺点，避免片面判断

方法/步骤：

1. 列举优点
   - 核心优势
   - 独特价值
   - 竞争优势

2. 列举缺点
   - 明显不足
   - 潜在风险
   - 局限性

3. 权重评估
   - 优点的重要程度
   - 缺点的严重程度
   - 相对权重

4. 适用条件
   - 什么情况下优点突出
   - 什么情况下缺点致命
   - 边界条件

5. 综合判断
   - 优点是否大于缺点
   - 缺点是否可以接受
   - 是否有改进空间

示例：
方案："使用React开发前端"

优点：
+ 组件化开发，复用性强
+ 虚拟DOM性能好
+ 生态丰富，社区活跃
+ 就业市场需求大

缺点：
- 学习曲线陡峭
- 需要配合其他库（路由、状态管理）
- 包体积相对较大
- JSX语法有争议

适用条件：
✓ 复杂交互的单页应用
✓ 团队有React经验
✗ 简单的展示型网站
✗ 团队更熟悉Vue

结论：对于复杂SPA项目且团队有经验，React是好选择

注意事项：
✓ 客观公正，不偏袒
✓ 既看优点也看缺点
✓ 考虑具体场景
✗ 不要过度美化
✗ 避免全盘否定

适用场景：
- 技术选型
- 方案评审
- 产品决策
- 投资评估

输出格式：
- 优点：[列举优点]
- 缺点：[列举缺点]
- 权重：[重要程度评估]
- 适用条件：[什么情况下合适]
- 综合结论：[利弊权衡后的判断]
